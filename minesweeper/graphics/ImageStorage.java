package com.javarush.games.minesweeper.graphics;

import com.javarush.engine.cell.Color;

/**
 * All images' body data and colors are stored here. Each image corresponds a visual element.
 */

public class ImageStorage {
    private Color[] colors;
    private final int[][] data;

    public ImageStorage(VisualElement visualElement) {
        switch (visualElement) {

            // BIG PICTURES

            case PIC_LOGO:
                colors = new Color[]{Color.NONE, Color.WHITE, Color.BLACK, Color.DARKSLATEGRAY, Color.SANDYBROWN, Color.RED, Color.YELLOW};
                data = ImageCreator.stringsToArray(
                        "00000001111111000000000000000000000000000000000000000000000000000000",
                        "00000111100000110000000000000000000000000000000000000000000000000000",
                        "00001111000000001000000000000000000000000000000000000000000000000000",
                        "00011110000000000100000000000000000000000000000011001100000000000000",
                        "00111100000005500000000000000000000000000000000010000100000000000000",
                        "00111000000050550000000000000000000000000000000000000000000000000000",
                        "01111000000006050000000000000000000000000000000000000000000000000000",
                        "01111000000010500000000111110000011001111000000001111100000111111100",
                        "01111000000100000000001100001000011011111100000011000010001110000010",
                        "01111000022222000000011000000100011110000110000110000001001110000001",
                        "01111000222222200000011000000100011100000010001110000001001110000001",
                        "01111002222232220000111000000100011100000010001110000001001110000001",
                        "01111002222223220000111000000100011100000010001110000011001110000001",
                        "00111002222223220010111000000100011100000010001111111110001110000001",
                        "00111102222222220010111000000100011100000010001110000000001110000001",
                        "00011112222222220100111000000100011100000010001110000000001110000011",
                        "00001111222222201000111100000110011100000010001110000001001111111110",
                        "00000111122222110000011110001110011100000011000111000010001111111000",
                        "00000001111111000000001111110011001100000001100011111100001410000000",
                        "00000000000000000000000000000000000000000000000000000000001410000000",
                        "00000000000000000000000000000000000000000000000000000000001410000000",
                        "00000000000000000000000000000000000000000000000000000000001410000000",
                        "00011111111100000000000000000000000000000000000000000000001410000000",
                        "00122222222100000000000000000000000000000000000000000000011410000000",
                        "01222222222100000000000000000000000000000000000000000000114110000000",
                        "12222222322111111111111111111111111111111111111111111111144100000000",
                        "12233333322222224444444444444444444444444444444444444444441100000000",
                        "12222222222222224444444444444444444444444444444444444444111000000000",
                        "12222222222111111111111111111111111111111111111111111111100000000000",
                        "01222222222100000000000000000000000000000000000000000000000000000000",
                        "00122222222100000000000000000000000000000000000000000000000000000000",
                        "00011111111100000000000000000000000000000000000000000000000000000000");
                break;
            case PIC_FACE_HAPPY:
                colors = Color.values();
                data = new int[][]{{1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, {1, 59, 59, 59, 1, 1, 59, 59, 59, 59, 1, 1, 59, 59, 59, 1}, {1, 59, 80, 1, 59, 59, 3, 3, 3, 3, 59, 59, 1, 80, 59, 1}, {1, 59, 1, 59, 3, 3, 3, 3, 3, 3, 3, 3, 59, 1, 59, 1}, {1, 59, 59, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 59, 59, 1}, {0, 1, 59, 3, 1, 3, 1, 3, 3, 1, 3, 1, 3, 59, 1, 0}, {0, 1, 59, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 59, 1, 0}, {0, 1, 126, 126, 3, 3, 3, 3, 3, 3, 3, 3, 126, 126, 1, 0}, {0, 1, 4, 59, 3, 3, 3, 3, 3, 3, 3, 59, 59, 4, 1, 0}, {0, 0, 1, 126, 59, 1, 2, 1, 1, 2, 1, 59, 126, 1, 0, 0}, {0, 0, 1, 4, 59, 59, 1, 53, 53, 1, 59, 59, 4, 1, 0, 0}, {0, 0, 0, 1, 4, 4, 59, 59, 59, 59, 4, 4, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 4, 4, 4, 4, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}};
                break;
            case PIC_FACE_SAD:
                colors = Color.values();
                data = new int[][]{{1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, {1, 59, 59, 59, 1, 1, 59, 59, 59, 59, 1, 1, 59, 59, 59, 1}, {1, 59, 80, 1, 59, 59, 3, 3, 3, 3, 59, 59, 1, 80, 59, 1}, {1, 59, 1, 59, 3, 3, 3, 3, 3, 3, 3, 3, 59, 1, 59, 1}, {1, 59, 59, 3, 1, 1, 3, 3, 3, 3, 1, 1, 3, 59, 59, 1}, {0, 1, 59, 3, 3, 3, 1, 3, 3, 1, 3, 3, 3, 59, 1, 0}, {0, 1, 59, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 59, 1, 0}, {0, 1, 126, 126, 3, 3, 3, 3, 3, 3, 3, 3, 126, 126, 1, 0}, {0, 1, 4, 59, 3, 3, 1, 1, 1, 1, 3, 3, 59, 4, 1, 0}, {0, 0, 1, 126, 59, 1, 2, 19, 19, 2, 1, 59, 126, 1, 0, 0}, {0, 0, 1, 4, 59, 59, 19, 19, 19, 19, 59, 59, 4, 1, 0, 0}, {0, 0, 0, 1, 4, 4, 59, 59, 59, 59, 4, 4, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 4, 4, 4, 4, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}};
                break;
            case SHOP_ITEM_SHIELD:
                colors = Color.values();
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 0, 0}, {0, 0, 9, 57, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 50, 50, 0, 0}, {0, 0, 9, 57, 122, 83, 83, 122, 83, 83, 122, 83, 83, 133, 50, 50, 0, 0}, {0, 0, 9, 57, 83, 83, 122, 83, 83, 122, 83, 83, 122, 83, 50, 50, 0, 0}, {0, 0, 9, 57, 83, 122, 83, 83, 122, 83, 83, 122, 83, 83, 50, 50, 0, 0}, {0, 0, 9, 57, 34, 57, 57, 57, 57, 57, 57, 57, 57, 9, 50, 50, 0, 0}, {0, 0, 9, 57, 34, 34, 34, 34, 34, 34, 34, 34, 34, 9, 50, 50, 0, 0}, {0, 0, 9, 57, 34, 34, 34, 34, 34, 34, 34, 34, 34, 9, 50, 50, 0, 0}, {0, 0, 9, 57, 34, 9, 50, 34, 34, 34, 34, 9, 50, 9, 50, 50, 0, 0}, {0, 0, 9, 57, 132, 44, 44, 50, 34, 34, 9, 44, 44, 50, 50, 50, 0, 0}, {0, 0, 9, 57, 132, 44, 44, 50, 34, 34, 9, 44, 44, 50, 50, 50, 0, 0}, {0, 0, 9, 57, 34, 9, 50, 34, 34, 34, 34, 9, 50, 9, 50, 50, 0, 0}, {0, 0, 9, 57, 34, 34, 34, 34, 34, 34, 34, 34, 34, 9, 50, 50, 0, 0}, {0, 0, 0, 57, 34, 34, 34, 34, 34, 34, 34, 34, 34, 9, 50, 0, 0, 0}, {0, 0, 0, 50, 57, 34, 34, 34, 34, 34, 34, 34, 9, 9, 50, 0, 0, 0}, {0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SHOP_ITEM_SCANNER:
                colors = Color.values();
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 45, 45, 45, 45, 45, 45, 45, 45, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 45, 33, 33, 33, 33, 33, 33, 45, 1, 1, 0, 0, 0}, {0, 0, 0, 66, 1, 45, 6, 5, 6, 6, 6, 6, 45, 1, 66, 0, 0, 0}, {0, 0, 0, 66, 1, 45, 33, 33, 33, 33, 33, 22, 45, 1, 66, 0, 0, 0}, {0, 0, 0, 66, 1, 45, 6, 6, 6, 6, 22, 6, 45, 1, 66, 0, 0, 0}, {0, 0, 0, 66, 1, 45, 33, 33, 33, 22, 33, 33, 45, 1, 66, 0, 0, 0}, {0, 0, 0, 66, 1, 45, 6, 6, 6, 6, 6, 6, 45, 1, 66, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 45, 45, 45, 45, 45, 45, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 43, 134, 1, 111, 111, 1, 134, 43, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 1, 1, 53, 53, 1, 1, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SHOP_ITEM_FLAG:
                colors = new Color[]{Color.NONE, Color.BLACK, Color.RED, Color.DARKRED, Color.YELLOW};
                data = ImageCreator.stringsToArray("000000000000000000", "001100000000000000", "001122000000000000", "001122220000000000", "001122222200000000", "001124422222000000", "001124422222220000", "001122222222223300", "001122222222330000", "001122222233000000", "001122223300000000", "001122330000000000", "001133000000000000", "001100000000000000", "001100000000000000", "001100000000000000", "001100000000000000", "001100000000000000");
                break;
            case SHOP_ITEM_SHOVEL:
                colors = Color.values();
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 59, 3, 59, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 3, 59, 59, 59, 3, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 59, 59, 4, 59, 3, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 59, 59, 3, 0, 0}, {0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 59, 4, 3, 59, 3, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 131, 59, 0, 3, 0, 0, 0, 0}, {0, 0, 0, 59, 0, 0, 0, 0, 126, 131, 126, 0, 0, 0, 0, 0, 3, 0}, {0, 0, 59, 3, 59, 0, 0, 126, 131, 126, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 59, 0, 0, 126, 131, 126, 0, 0, 59, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 131, 126, 0, 0, 59, 3, 59, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 59, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 1, 1, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SHOP_ITEM_DICE:
                colors = new Color[]{Color.NONE, Color.DARKGRAY, Color.LIGHTGRAY, Color.RED, Color.BLACK};
                data = ImageCreator.stringsToArray("000000000000000000", "000000000000000000", "000000001100000000", "000000112211000000", "000011222222110000", "001122242242221100", "001211222222112100", "001222112211222100", "001242221122222100", "001222222122222100", "001222242122322100", "001242222122222100", "001222222122222100", "001122242122221100", "000011222122110000", "000000112111000000", "000000001100000000", "000000000000000000");
                break;
            case SHOP_ITEM_BOMB:
                colors = new Color[]{Color.NONE, Color.BLACK, Color.GRAY, Color.LIGHTGRAY, Color.RED, Color.YELLOW};
                data = ImageCreator.stringsToArray("000505000000000000", "000050000000000000", "000504330000000000", "000000013110000000", "000001111311100000", "000011111111110000", "000111211111111000", "000112111111111000", "001111111111111100", "001111111111111100", "001111111111111100", "001121111111111100", "000111111111111000", "000111111111111000", "000011111111110000", "000001111111100000", "000000011110000000", "000000000000000000");
                break;
            case SHOP_COIN:
                colors = new Color[]{Color.NONE, Color.YELLOW, Color.ORANGE};
                data = ImageCreator.stringsToArray("0110", "1112", "1112", "1112", "1122", "0220");
                break;
            case MENU_ARROW:
                colors = new Color[]{Color.NONE, Color.YELLOW, Color.WHITE};
                data = ImageCreator.stringsToArray("11000", "01100", "00110", "00011", "00110", "01100", "11000");
                break;
            case MENU_DIFFICULTY_BAR:
                colors = new Color[]{Color.NONE, Color.GREEN, Color.BLACK};
                data = ImageCreator.stringsToArray("020", "212", "212", "212", "212", "212", "020");
                break;
            case WIN_MENU:
                colors = new Color[]{Color.NONE, Theme.MAIN_MENU_BG.getColor(), Color.NONE, Theme.MAIN_MENU_BORDER.getColor()};
                data = ImageCreator.createWindowBitmap(100, 100, false, true);
                break;
            case WIN_SHOP:
                colors = new Color[]{Color.NONE, Theme.SHOP_BG.getColor(), Color.BLACK, Theme.SHOP_BORDER.getColor()};
                data = ImageCreator.createWindowBitmap(80, 80, true, true);
                break;
            case WIN_SHOP_HEADER_FOOTER:
                colors = new Color[]{Color.NONE, Theme.SHOP_HEADER_FOOTER.getColor(), Color.BLACK, Theme.SHOP_BORDER.getColor()};
                data = ImageCreator.createWindowBitmap(80, 12, false, true);
                break;
            case SHOP_ITEM_FRAME:
                colors = new Color[]{Color.NONE, Theme.SHOP_ITEM_BG.getColor(), Color.BLACK, Color.GREEN};
                data = ImageCreator.createWindowBitmap(20, 20, true, true);
                break;
            case SHOP_ITEM_FRAME_PRESSED:
                colors = new Color[]{Color.NONE, Theme.SHOP_ITEM_BG.getColor(), Color.BLACK, Color.GREEN};
                data = ImageCreator.createWindowBitmap(20, 20, false, true);
                break;
            case WIN_VICTORY:
            case WIN_GAME_OVER:
                colors = new Color[]{Color.NONE, Theme.MAIN_MENU_BG.getColor(), Color.BLACK, Theme.BUTTON_BG.getColor()};
                data = ImageCreator.createWindowBitmap(70, 35, true, true);
                break;
            case BUTTON_OK:
                colors = new Color[]{Color.NONE, Color.SADDLEBROWN, Color.BLACK, Color.BURLYWOOD};
                data = ImageCreator.createWindowBitmap(13, 9, true, true);
                break;
            case BUTTON_CLOSE:
                colors = new Color[]{Color.NONE, Color.SADDLEBROWN, Color.BLACK, Color.BURLYWOOD};
                data = ImageCreator.createWindowBitmap(9, 9, true, true);
                break;
            case MENU_SWITCH:
                colors = new Color[]{Color.NONE, Color.RED, Color.BLACK, Color.YELLOW};
                data = ImageCreator.createWindowBitmap(4, 7, false, true);
                break;
            case MENU_SWITCH_RAIL:
                colors = new Color[]{Color.NONE, Color.BLACK, Color.NONE, Color.NONE};
                data = ImageCreator.createWindowBitmap(12, 3, false, false);
                break;
            case WIN_BOARD_TRANSPARENT_FRAME:
                colors = new Color[]{Color.NONE, Color.NONE, Color.NONE, Color.BLUE};
                data = ImageCreator.createWindowBitmap(100, 100, false, true);
                break;
            case MENU_THEME_PALETTE:
                colors = new Color[]{Color.NONE, Color.GRAY, Color.BLACK, Color.WHITE};
                data = ImageCreator.createWindowBitmap(10, 10, false, true);
                break;
            case SHOP_DICE_1:
                colors = new Color[]{Color.NONE, Color.WHITE, Color.RED, Color.BLACK};
                data = ImageCreator.stringsToArray("11111110", "11111113", "11111113", "11121113", "11111113", "11111113", "11111113", "03333333");
                break;
            case SHOP_DICE_2:
                colors = new Color[]{Color.NONE, Color.WHITE, Color.BLACK, Color.BLACK};
                data = ImageCreator.stringsToArray("11111110", "11111213", "11111113", "11111113", "11111113", "12111113", "11111113", "03333333");
                break;
            case SHOP_DICE_3:
                colors = new Color[]{Color.NONE, Color.WHITE, Color.BLACK, Color.BLACK};
                data = ImageCreator.stringsToArray("11111110", "11111213", "11111113", "11121113", "11111113", "12111113", "11111113", "03333333");
                break;
            case SHOP_DICE_4:
                colors = new Color[]{Color.NONE, Color.WHITE, Color.BLACK, Color.BLACK};
                data = ImageCreator.stringsToArray("11111110", "12111213", "11111113", "11111113", "11111113", "12111213", "11111113", "03333333");
                break;
            case SHOP_DICE_5:
                colors = new Color[]{Color.NONE, Color.WHITE, Color.BLACK, Color.BLACK};
                data = ImageCreator.stringsToArray("11111110", "12111213", "11111113", "11121113", "11111113", "12111213", "11111113", "03333333");
                break;
            case SHOP_DICE_6:
                colors = new Color[]{Color.NONE, Color.WHITE, Color.BLACK, Color.BLACK};
                data = ImageCreator.stringsToArray("11111110", "12111213", "11111113", "12111213", "11111113", "12111213", "11111113", "03333333");
                break;
            case MENU_CUP:
                colors = new Color[]{Color.NONE, Color.GOLD, Color.WHITE, Color.MAROON, Color.KHAKI};
                data = ImageCreator.stringsToArray("000111111111000", "001111111211200", "010111111211020", "010111111211020", "001111111211100", "000011111210000", "000011112110000", "000001111100000", "000000010000000", "000000010000000", "000000112000000", "000001111200000", "000033333330000", "000034444230000", "000333333333000");
                break;

            // SPRITES

            case SPR_BOARD_0:
                colors = new Color[]{Color.NONE, Color.WHITE};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_1:
                colors = new Color[]{Color.NONE, Color.DARKGREEN};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_2:
                colors = new Color[]{Color.NONE, Color.DARKBLUE};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_3:
                colors = new Color[]{Color.NONE, Color.DARKRED};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_4:
                colors = new Color[]{Color.NONE, Color.PURPLE};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_5:
                colors = new Color[]{Color.NONE, Color.DARKSLATEGRAY};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_6:
                colors = new Color[]{Color.NONE, Color.DARKSLATEBLUE};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_7:
                colors = new Color[]{Color.NONE, Color.FORESTGREEN};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_8:
                colors = new Color[]{Color.NONE, Color.RED};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_9:
                colors = new Color[]{Color.NONE, Color.BLACK};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_FLAG:
                colors = new Color[]{Color.NONE, Color.BLACK, Color.RED, Color.DARKRED, Color.YELLOW};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 2, 2, 0, 0, 0, 0}, {0, 0, 0, 1, 4, 2, 2, 2, 0, 0}, {0, 0, 0, 1, 2, 2, 3, 3, 0, 0}, {0, 0, 0, 1, 3, 3, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
                break;
            case SPR_BOARD_MINE:
                colors = new Color[]{Color.NONE, Color.BLACK, Color.RED, Color.DARKGRAY, Color.DARKSLATEGRAY, Color.DARKRED, Color.DIMGRAY};
                data = new int[][]{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 1, 3, 4, 4, 6, 1, 0}, {0, 0, 0, 1, 4, 2, 5, 4, 1, 1}, {0, 0, 1, 1, 4, 5, 5, 4, 1, 0}, {0, 0, 0, 1, 6, 4, 4, 6, 1, 0}, {0, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0},};
                break;

            //TILES

            case CELL_CLOSED:
                colors = new Color[]{Color.NONE, Theme.CELL_SHADOW.getColor(), Theme.CELL_LIGHT.getColor(), Theme.CELL_BG_UP.getColor(), Color.BLACK, Color.GRAY};
                data = new int[][]{{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 3, 3, 3, 3, 3, 3, 3, 3, 1}, {2, 1, 1, 1, 1, 1, 1, 1, 1, 1},};
                break;
            case CELL_OPENED:
                colors = new Color[]{Color.NONE, Theme.CELL_SHADOW.getColor(), Theme.CELL_LIGHT.getColor(), Theme.CELL_BG_UP.getColor(), Color.BLACK, Color.GRAY};
                data = new int[][]{{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3}, {2, 1, 3, 3, 3, 3, 3, 3, 3, 3},};
                break;
            case CELL_DESTROYED:
                colors = new Color[]{Color.NONE, Theme.CELL_SHADOW.getColor(), Theme.CELL_LIGHT.getColor(), Theme.CELL_BG_UP.getColor(), Color.BLACK, Color.GRAY};
                data = new int[][]{{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 5, 3, 3, 3, 5, 3, 3, 5}, {2, 1, 3, 5, 4, 3, 5, 3, 5, 3}, {2, 1, 5, 3, 3, 4, 4, 3, 4, 3}, {2, 1, 5, 4, 5, 4, 4, 3, 5, 3}, {2, 1, 3, 5, 3, 5, 3, 5, 3, 3}, {2, 1, 3, 5, 4, 3, 5, 4, 5, 5}, {2, 1, 3, 5, 3, 3, 3, 5, 3, 3}, {2, 1, 5, 3, 3, 3, 3, 5, 3, 3},};
                break;

            // SYMBOLS

            case SYM_RU_LETTER_A:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_B:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 1}, {1, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_V:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 1}, {1, 1, 1, 0}, {1, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_G:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {1, 0, 0}, {1, 0, 0}, {1, 0, 0}, {1, 0, 0}};
                break;
            case SYM_RU_LETTER_D:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 1, 1, 0}, {0, 1, 0, 1, 0}, {0, 1, 0, 1, 0}, {0, 1, 0, 1, 0}, {1, 1, 1, 1, 1}, {1, 0, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_YE:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 1}, {1, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 0}, {1, 1, 1, 1}};
                break;
            case SYM_RU_LETTER_YO:
                data = new int[][]{{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 1, 1, 1}, {1, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 0}, {1, 1, 1, 1}};
                break;
            case SYM_RU_LETTER_J:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 1, 0, 1}, {1, 0, 1, 0, 1}, {0, 1, 1, 1, 0}, {1, 0, 1, 0, 1}, {1, 0, 1, 0, 1}};
                break;
            case SYM_RU_LETTER_Z:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 0}, {0, 0, 0, 1}, {0, 1, 1, 0}, {0, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_I:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 1, 1}, {1, 1, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_IKR:
                data = new int[][]{{0, 1, 1, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 1, 1}, {1, 1, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_K:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 1, 0}, {1, 1, 0, 0}, {1, 0, 1, 0}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_L:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_M:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 0, 0, 1}, {1, 1, 0, 1, 1}, {1, 0, 1, 0, 1}, {1, 0, 0, 0, 1}, {1, 0, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_N:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_O:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_P:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_R:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 1}, {1, 1, 1, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}};
                break;
            case SYM_RU_LETTER_S:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 1}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 1, 1, 1}};
                break;
            case SYM_RU_LETTER_T:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}};
                break;
            case SYM_RU_LETTER_U:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 1, 1, 1}, {0, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_F:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 1, 1, 1, 0}, {1, 0, 1, 0, 1}, {1, 0, 1, 0, 1}, {0, 1, 1, 1, 0}, {0, 0, 1, 0, 0}};
                break;
            case SYM_RU_LETTER_H:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_C:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 0, 1, 0}, {1, 0, 0, 1, 0}, {1, 0, 0, 1, 0}, {1, 0, 0, 1, 0}, {1, 1, 1, 1, 1}, {0, 0, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_CH:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 1, 1, 1}, {0, 0, 0, 1}, {0, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_SHA:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 1, 0, 1}, {1, 0, 1, 0, 1}, {1, 0, 1, 0, 1}, {1, 0, 1, 0, 1}, {1, 1, 1, 1, 1}};
                break;
            case SYM_RU_LETTER_SCHA:
                data = new int[][]{{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 1, 0}, {1, 0, 1, 0, 1, 0}, {1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_SOFT:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_Y:
                data = new int[][]{{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 1}, {1, 1, 1, 0, 0, 1}, {1, 0, 0, 1, 0, 1}, {1, 1, 1, 0, 0, 1}};
                break;
            case SYM_RU_LETTER_HARD:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 1, 0, 0, 0}, {0, 1, 0, 0, 0}, {0, 1, 1, 1, 0}, {0, 1, 0, 0, 1}, {0, 1, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_E:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 0}, {0, 0, 0, 1}, {0, 1, 1, 1}, {0, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_YU:
                data = new int[][]{{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {1, 0, 0, 1, 1, 0}, {1, 0, 1, 0, 0, 1}, {1, 1, 1, 0, 0, 1}, {1, 0, 1, 0, 0, 1}, {1, 0, 0, 1, 1, 0}};
                break;
            case SYM_RU_LETTER_YA:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 1}, {1, 0, 0, 1}, {0, 1, 1, 1}, {0, 1, 0, 1}, {1, 0, 0, 1}};
                break;
            case SYM_EN_LETTER_D:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_EN_LETTER_F:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 1}, {1, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}};
                break;
            case SYM_EN_LETTER_G:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 1}, {1, 0, 0, 0}, {1, 0, 1, 1}, {1, 0, 0, 1}, {0, 1, 1, 0}};
                break;
            case SYM_EN_LETTER_I:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 1, 1}};
                break;
            case SYM_EN_LETTER_J:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 1}, {0, 0, 1, 0}, {0, 0, 1, 0}, {1, 0, 1, 0}, {0, 1, 0, 0}};
                break;
            case SYM_EN_LETTER_L:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 0, 0}, {1, 0, 0}, {1, 0, 0}, {1, 0, 0}, {1, 1, 1}};
                break;
            case SYM_EN_LETTER_N:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 0, 1}, {1, 0, 1, 1}, {1, 0, 0, 1}};
                break;
            case SYM_EN_LETTER_Q:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}};
                break;
            case SYM_EN_LETTER_R:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 0}, {1, 0, 0, 1}, {1, 1, 1, 0}, {1, 0, 1, 0}, {1, 0, 0, 1}};
                break;
            case SYM_EN_LETTER_S:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 1}, {1, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 1}, {1, 1, 1, 0}};
                break;
            case SYM_EN_LETTER_U:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 1, 1, 0}};
                break;
            case SYM_EN_LETTER_V:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 0, 0, 1}, {1, 0, 0, 0, 1}, {1, 0, 0, 0, 1}, {0, 1, 0, 1, 0}, {0, 0, 1, 0, 0}};
                break;
            case SYM_EN_LETTER_W:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 0, 0, 1}, {1, 0, 0, 0, 1}, {1, 0, 1, 0, 1}, {1, 1, 0, 1, 1}, {1, 0, 0, 0, 1}};
                break;
            case SYM_EN_LETTER_X:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 0, 0, 1}, {0, 1, 0, 1, 0}, {0, 0, 1, 0, 0}, {0, 1, 0, 1, 0}, {1, 0, 0, 0, 1}};
                break;
            case SYM_EN_LETTER_Y:
                data = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {1, 0, 0, 0, 1}, {0, 1, 0, 1, 0}, {0, 0, 1, 0, 0}, {0, 0, 1, 0, 0}, {0, 0, 1, 0, 0}};
                break;
            case SYM_EN_LETTER_Z:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 0}, {1, 1, 1, 1}};
                break;
            case SYM_SYMBOL_DOT:
                data = new int[][]{{0}, {0}, {0}, {0}, {0}, {0}, {1}};
                break;
            case SYM_SYMBOL_COMMA:
                data = new int[][]{{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 1}, {0, 1}, {1, 0}};
                break;
            case SYM_SYMBOL_COLON:
                data = new int[][]{{0}, {0}, {0}, {1}, {0}, {1}, {0}};
                break;
            case SYM_SYMBOL_EXCLAMATION:
                data = new int[][]{{0}, {0}, {1}, {1}, {1}, {0}, {1}};
                break;
            case SYM_SYMBOL_QUESTION:
                data = new int[][]{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 1}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 0, 0}};
                break;
            case SYM_SYMBOL_SLASH:
                data = new int[][]{{0, 0, 0}, {0, 0, 1}, {0, 0, 1}, {0, 1, 0}, {0, 1, 0}, {1, 0, 0}, {1, 0, 0}};
                break;
            case SYM_SYMBOL_DASH:
                data = new int[][]{{0, 0}, {0, 0}, {0, 0}, {0, 0}, {1, 1}, {0, 0}, {0, 0}};
                break;
            case SYM_SYMBOL_EQUALS:
                data = new int[][]{{0, 0}, {0, 0}, {0, 0}, {1, 1}, {0, 0}, {1, 1}, {0, 0}};
                break;
            case SYM_SYMBOL_ASTERISK:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {0, 1, 0}, {1, 0, 1}, {0, 0, 0}};
                break;
            case SYM_SYMBOL_SPACE:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}};
                break;
            case SYM_DIGIT_0:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {1, 0, 1}, {1, 0, 1}, {1, 0, 1}, {1, 1, 1}};
                break;
            case SYM_DIGIT_1:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 1, 1}};
                break;
            case SYM_DIGIT_2:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {0, 0, 1}, {1, 1, 1}, {1, 0, 0}, {1, 1, 1}};
                break;
            case SYM_DIGIT_3:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {0, 0, 1}, {1, 1, 1}, {0, 0, 1}, {1, 1, 1}};
                break;
            case SYM_DIGIT_4:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {1, 0, 1}, {1, 1, 1}, {0, 0, 1}, {0, 0, 1}};
                break;
            case SYM_DIGIT_5:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {1, 0, 0}, {1, 1, 1}, {0, 0, 1}, {1, 1, 1}};
                break;
            case SYM_DIGIT_6:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {1, 0, 0}, {1, 1, 1}, {1, 0, 1}, {1, 1, 1}};
                break;
            case SYM_DIGIT_7:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {0, 0, 1}, {0, 0, 1}, {0, 0, 1}, {0, 0, 1}};
                break;
            case SYM_DIGIT_8:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {1, 0, 1}, {1, 1, 1}, {1, 0, 1}, {1, 1, 1}};
                break;
            case SYM_DIGIT_9:
                data = new int[][]{{0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {1, 0, 1}, {1, 1, 1}, {0, 0, 1}, {1, 1, 1}};
                break;
            case SPR_BOARD_NONE:
            case NONE:
            default:
                colors = new Color[]{Color.NONE, Color.WHITE};
                data = new int[1][1];
                break;
        }
    }

    public Color[] getColors() {
        return colors == null ? new Color[]{Color.NONE, Color.WHITE} : colors;
    }

    public int[][] getData() {
        return data;
    }
}
